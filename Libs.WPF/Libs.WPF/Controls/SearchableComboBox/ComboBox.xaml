<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../../Styles/TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="BorderThickness"
                Value="0.5" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="Padding"
                Value="12" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">

                    <Border x:Name="templateRoot"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder"
                                Margin="0,0,14,0"
                                HorizontalAlignment="Right"
                                SnapsToDevicePixels="true">
                            <Viewbox Width="12"
                                     Height="12">
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M4.79289 8.54289C5.18342 8.15237 5.81658 8.15237 6.20711 8.54289L12 14.3358L17.7929 8.54289C18.1834 8.15237 18.8166 8.15237 19.2071 8.54289C19.5976 8.93341 19.5976 9.56658 19.2071 9.9571L13.4142 15.75C12.6332 16.531 11.3668 16.531 10.5858 15.75L4.79289 9.95711C4.40237 9.56658 4.40237 8.93342 4.79289 8.54289Z"
                                      Fill="#33383F"
                                      RenderTransformOrigin="0.5,0.5"
                                      Stretch="Uniform">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Viewbox>

                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="#9A9FA5" />

                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="180"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="arrow"
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                         To="0"
                                                         Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="#FCFCFC" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="#EFEFEF" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="Transparent" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="Transparent" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="True" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="#9A9FA5" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="#9A9FA5" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="#9A9FA5" />

                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="#33383F" />
                        </MultiDataTrigger>

                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="#272B30" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="#FFBFBFBF" />

                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="#FCFCFC" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="#F4F4F4" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="#FFF" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="#FFBFBFBF" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="Transparent" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="Transparent" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2" />
                <ColumnDefinition Width="35"
                                  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>

            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="3"
                   Margin="1"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=templateRoot}"
                   PopupAnimation="Slide">
                <Grid x:Name="PART_Container"
                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">

                    <Border x:Name="dropDownBorder"
                            Padding="0,8"
                            Background="#111315"
                            BorderBrush="#111315"
                            BorderThickness="0.5"
                            CornerRadius="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="DropDownScrollViewer"
                                          Grid.Row="1">
                                <Grid x:Name="grid"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                        <Rectangle x:Name="opaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>

                            </ScrollViewer>
                        </Grid>
                    </Border>

                </Grid>

            </Popup>

            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="3"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{DynamicResource ComboBoxToggleButton}" />
            <Border x:Name="borderBeark"
                    Grid.Column="1"
                    Width="2"
                    HorizontalAlignment="Left"
                    Background="{TemplateBinding BorderBrush}" />
            <Grid x:Name="border1"
                  Margin="2,0"
                  Background="Transparent">
                <TextBox x:Name="PART_EditableTextBox"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Style="{StaticResource TextBoxStyleComboxBoxEditable}" />

                <TextBlock x:Name="HintTextBlock"
                           Margin="12,0"
                           VerticalAlignment="Center"
                           Foreground="#6F767E"
                           Text="{Binding Hint, RelativeSource={RelativeSource TemplatedParent}}"
                           IsHitTestVisible="False"
                           Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter TargetName="dropDownBorder"
                        Property="Height"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer"
                     Property="ScrollViewer.CanContentScroll"
                     Value="false">
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>

            <Trigger Property="Text"
                     Value="">
                <Setter TargetName="HintTextBlock"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="Text"
                     Value="{x:Null}">
                <Setter TargetName="HintTextBlock"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxItemTemplate"
                     TargetType="{x:Type ComboBoxItem}">
        <Grid x:Name="GridWrapper">
            <Border x:Name="BackBorder"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    SnapsToDevicePixels="true" />
            <Border x:Name="MouseOverBorder"
                    Margin="4,0"
                    Background="#33383F"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    CornerRadius="0"
                    Opacity="0"
                    SnapsToDevicePixels="true" />
            <Border x:Name="SelectedBorder"
                    Margin="4,0"
                    Padding="10"
                    Background="#FCD535"
                    CornerRadius="0"
                    Opacity="0"
                    RenderTransformOrigin="0.5,0.5"
                    SnapsToDevicePixels="true" />
            <Border Padding="12"
                    SnapsToDevicePixels="true">
                <ContentPresenter />
            </Border>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3"
                                          To="Normal">
                            <VisualTransition.GeneratedEasingFunction>
                                <CircleEase EasingMode="EaseOut" />
                            </VisualTransition.GeneratedEasingFunction>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Normal" />
                    <VisualState Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.7"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="SelectionStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3" />
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.9"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Unselected" />
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3"
                                          To="Unfocused" />
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="MouseOverBorder"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.9"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Unfocused" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="FrameworkElement.Tag"
                               Value="1.0" />
                    <Condition Property="ListBoxItem.IsSelected"
                               Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="FrameworkElement.Height"
                        Value="0" />
            </MultiTrigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="ItemsControl.Foreground"
                        Value="#1A1D1F" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBoxItem}"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="UIElement.SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Control.Padding"
                Value="16" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Control.Background"
                Value="Transparent" />
        <Setter Property="Control.BorderBrush"
                Value="Transparent" />
        <Setter Property="Control.BorderThickness"
                Value="0" />
        <Setter Property="ItemsControl.Foreground"
                Value="#F4F4F4" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Control.Template"
                Value="{StaticResource ComboBoxItemTemplate}" />
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0"
                                  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   Grid.ColumnSpan="2"
                   AllowsTransparency="true"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Placement="Bottom"
                   PlacementTarget="{Binding ElementName=templateRoot}"
                   PopupAnimation="Slide">
                <Grid x:Name="PART_Container"
                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">

                    <Border x:Name="dropDownBorder"
                            Padding="0,8"
                            Background="#111315"
                            BorderBrush="#33383F"
                            BorderThickness="2"
                            CornerRadius="0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="DropDownScrollViewer"
                                          Grid.Row="1">
                                <Grid x:Name="grid"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                        <Rectangle x:Name="opaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>

                            </ScrollViewer>
                        </Grid>
                    </Border>

                </Grid>

            </Popup>
            <ToggleButton x:Name="toggleButton"
                          Grid.ColumnSpan="2"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}" />
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              IsHitTestVisible="false"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter TargetName="dropDownBorder"
                        Property="Height"
                        Value="95" />
            </Trigger>
            <Trigger Property="IsDropDownOpen"
                     Value="true">
                <Setter Property="Background"
                        Value="#FFFFFF" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger SourceName="DropDownScrollViewer"
                     Property="ScrollViewer.CanContentScroll"
                     Value="false">
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Top"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter TargetName="opaqueRect"
                        Property="Canvas.Left"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="AutoComboBoxStyle"
           TargetType="{x:Type ComboBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="False" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="{StaticResource InputBackgroundColor}" />
        <Setter Property="Foreground"
                Value="{StaticResource ForegroundColor}" />
        <Setter Property="Height"
                Value="28" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="#6F767E" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                        Value="White" />
                <Setter Property="Background"
                        Value="Black" />
            </Trigger>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>